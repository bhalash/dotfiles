################################################################################
# ZSH Options
################################################################################

export TERM=xterm-256color

# Permit shorter loop syntax.
setopt short_loops
setopt function_arg_zero

# Resolve symlinks.
setopt chase_links

# No beeps.
unsetopt beep

# Safe rm.
unsetopt rm_star_silent

# Enable color output.
autoload colors && colors

################################################################################
# Vim/Nvim
################################################################################

# Operate zsh in vim mode.
bindkey -v

# Decrease lag in vim mode: This reduces time between input keystrokes to 1ms.
# See: https://dougblack.io/words/zsh-vi-mode.html
KEYTIMEOUT=1

# Default editor to nvim if unset.
if [[ -z "$EDITOR" ]]; then
  export EDITOR='nvim'
fi

alias vi='nvim'
alias vim='nvim'

################################################################################
# Set Tempdir
################################################################################

if [[ -z $TMPDIR ]] || [[ ! -d "${TMPDIR}" ]]; then
  # $TMPDIR is not declared on my Ubuntu box for some ineffable reason.
  export TMPDIR='/var/tmp/'
  mkdir -p -m 700 "${TMPDIR}"
fi

################################################################################
# Prompt
################################################################################

# Wrap $1 in given colors. Done for (perosnal) readability.
# See: http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Visual-effects
# See: https://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html
function prompt-color {
  local CONTENT=$1
  local FG=${2:-15} # fallback white
  local BG=${3:-0}  # fallback black
  echo "%F{${FG}}%K{${BG}}${CONTENT}%f%k"
}

# Separate Segments
function segment-separator {
  local SEGMENT_SEPARATOR=$'\ue0b0'
  local BG=${1:-0}
  local FG=${2:-15}
  echo $(prompt-color $SEGMENT_SEPARATOR $FG $BG)
}

# Show prompt for remote (SSH) or root user.
function user-prompt {
  local FG=15
  # local BG=23

  if [[ $(id -u) == 0 ]]; then
    FG=9 # red for root :p
  fi

  echo $(prompt-color '%n@%m ' $FG $BG)
}

function dir-prompt {
  local FG=15
  # local BG=15
  echo $(prompt-color '%1~ ' $FG $BG)
}

function mode-prompt {
  local FG=15
  # local BG=64
  local MODE_NORMAL=$(prompt-color '>' $FG $BG)
  local MODE_INSERT=$(prompt-color '$' $FG $BG)
  echo "${${KEYMAP/vicmd/${MODE_NORMAL}}/(main|viins)/${MODE_INSERT}}"
}

zle-line-init zle-keymap-select() {
  # Set prompt per functions above. Unset right prompt.
  # PROMPT="$(mode-prompt)$(user-prompt)$(dir-prompt) $ %b"
  PROMPT="$(user-prompt)$(dir-prompt)$(mode-prompt) %b"
  RPROMPT=""
  zle reset-prompt
}

# Remove annoying "%" sign after certain outputs.
# See: https://stackoverflow.com/questions/13660636/what-is-percent-tilde-in-zsh
setopt PROMPT_CR
setopt PROMPT_SP
export PROMPT_EOL_MARK=''

################################################################################
# Terminal/Pane Title
################################################################################

function set-window-title {
  echo -ne "\e]0;${1}\a"
}

################################################################################
# History
################################################################################

HISTFILE=$HOME/.zsh_history
HISTSIZE=2000
SAVEHIST=$HISTSIZE

setopt INC_APPEND_HISTORY
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_VERIFY
unsetopt HIST_BEEP

# Bind ctrl + r to history search.
bindkey '^R' history-incremental-search-backward

if [[ ! -f $HISTFILE ]]; then
  # Create $HISTFILE if it does not exist.
  touch $HISTFILE
fi

################################################################################
# Plugin Init
################################################################################

plugins=(git github history-substring-search)
autoload -Uz compinit && compinit -u

################################################################################
# Bind <tab> to cd Command
################################################################################

function first-tab {
  if [[ $#BUFFER == 0 ]]; then
    BUFFER="cd "
    CURSOR=3
    zle list-choices
  else
    zle expand-or-complete
  fi
}

zle -N first-tab
bindkey '^I' first-tab

################################################################################
# cd to Git Project Root Folder
################################################################################

function git-root {
  if $(git rev-parse 2> /dev/null); then
    builtin cd "$(git rev-parse --show-toplevel)"
  else
    echo "cd: not a git project: ${PWD}"
  fi
}

################################################################################
# Vim Mode Keybinds
################################################################################

zle -N zle-line-init
zle -N zle-keymap-select

# Backward deletion keybinds in insert mode.
bindkey '^?' backward-delete-char
bindkey '^W' backward-kill-word
bindkey '^H' backward-delete-char
bindkey '^U' backward-kill-line

################################################################################
# Foreground/Background Vim
#
# Stolen from Reddit, this is the Zsh equivalent of:
#
#   stty susp undef
#   bind '"\C-z":"fg\015"'
#
# Set ctrl + z to fg vim. It makes a great, efficient toggle on slow systems.
################################################################################

function fg-vim {
  fg nvim 2>/dev/null
}

stty susp undef
zle -N fg-vim
bindkey '^z' fg-vim

################################################################################
# Command Aliases
################################################################################

alias agu='sudo apt-get update && sudo apt-get -y dist-upgrade'
alias bf='big-files'
alias gr='git-root'
alias rot13='tr a-zA-Z n-za-mN-ZA-M <<<'
alias shit="printf '\e[?25h'"
alias tmux='tmux -2'

################################################################################
# Global Node.js Init
################################################################################

path+=('/usr/local/lib/node_modules')

################################################################################
# FZF
################################################################################

local FZF_PATH="${HOME}/.fzf.zsh"

export FZF_DEFAULT_COMMAND='rg --files --follow'
export FZF_CTRL_T_COMMAND='rg --files --follow'

if [[ -f $FZF_PATH ]] && [[ -d '/home/linuxbrew' ]]; then
  source $FZF_PATH
fi

################################################################################
# Load Transient Work Configuration
################################################################################

local WORK_ZSHRC="${HOME}/.zsh/work.zshrc"

if [[ -f $WORK_ZSHRC ]]; then
  source $WORK_ZSHRC
fi
