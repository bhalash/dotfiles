# zmodload zsh/zprof

# Zsh: Base {{{

# TODO(mark 2021-12-29): look at setting more options? Some cool stuff in there
# See: https://linux.die.net/man/1/zshoptions

export TERM=xterm-256color

# Permit shorter loop syntax
setopt short_loops
setopt function_arg_zero
# Resolve symlinks
setopt chase_links
# No beeps
unsetopt beep
# Safe rm
unsetopt rm_star_silent
# Enable color output
autoload colors && colors

# }}}

# Zsh: Autoload {{{

fpath=($fpath "${HOME}/.zautoload")

# }}}

# Zsh: Plugins {{{

# TODO(mark 2021-12-30): find more plugins? Seems to be some interesting
# options out there, but eh, installing stuff. I'm /very/ happy with my zsh
# startup time right now, without the addition of other crap to slow it

# NOTE(mark 2021-12-30): https://github.com/unixorn/awesome-zsh-plugins
# plugins=(git history-substring-search)
autoload -Uz compinit && compinit -C

# }}}

# Zsh: History {{{

HISTFILE=$HOME/.zsh_history
HISTSIZE=2000
SAVEHIST=$HISTSIZE

setopt INC_APPEND_HISTORY
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_VERIFY
unsetopt HIST_BEEP

# Bind ctrl + r to history search
bindkey '^R' history-incremental-search-backward

# Create $HISTFILE if it does not exist, which happens for some dumb reason?
[[ ! -f $HISTFILE ]] && touch $HISTFILE

# }}}

# Zsh: Prompt {{{

# Remove annoying "%" sign after certain outputs
# See: https://stackoverflow.com/questions/13660636/what-is-percent-tilde-in-zsh
setopt PROMPT_CR
setopt PROMPT_SP
export PROMPT_EOL_MARK=''

# Wrap $1 in given color. Done for (perosnal) readability.
# See: http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Visual-effects
# See: https://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html
function _prompt_color {
  local CONTENT=$1
  local FG=${2:-15} # fallback white
  local BG=${3}     # no fallback bg

  if [[ -n $BG ]]; then
    echo "%F{${FG}}%K{${BG}}${CONTENT}%f%k" # For background
  else
    echo "%F{${FG}}${CONTENT}%f%k"
  fi
}

# Separate Segments
function _prompt_segment_separator {
  local SEGMENT_SEPARATOR=$'\ue0b0'
  local BG=${1:-0}
  local FG=${2:-15}
  echo $(_prompt_color $SEGMENT_SEPARATOR $FG $BG)
}

# Show prompt for remote (SSH) or root user.
function _prompt_user {
  local FG=15

  if [[ $(id -u) == 0 ]]; then
    FG=9 # red for root :p
  fi

  echo $(_prompt_color '%n@%m ' $FG)
}

function _prompt_dir {
  echo $(_prompt_color '%1~ ')
}

function _prompt_mode {
  local MODE_NORMAL=$(_prompt_color '>')
  local MODE_INSERT=$(_prompt_color '$')
  echo "${${KEYMAP/vicmd/${MODE_NORMAL}}/(main|viins)/${MODE_INSERT}}"
}

zle-line-init zle-keymap-select() {
  PROMPT="$(_prompt_user)$(_prompt_dir)$(_prompt_mode) %b"
  RPROMPT=""
  zle reset-prompt
}

# }}}

# Zsh: Vim Mode {{{

# Operate zsh in vim mode
bindkey -v

# Decrease lag in vim mode: This reduces time between input keystrokes to 1ms.
# See: https://dougblack.io/words/zsh-vi-mode.html
KEYTIMEOUT=1

zle -N zle-line-init
zle -N zle-keymap-select

# Backward deletion keybinds in insert mode.
bindkey '^?' backward-delete-char
bindkey '^W' backward-kill-word
bindkey '^H' backward-delete-char
bindkey '^U' backward-kill-line

# }}}

# Zsh: Temp {{{

if [[ -z $TMPDIR ]] || [[ ! -d "${TMPDIR}" ]]; then
  # $TMPDIR is not declared on my Ubuntu box for some ineffable reason
  export TMPDIR='/var/tmp/'
  mkdir -p -m 700 "${TMPDIR}"
fi

# }}}

# Vim {{{

# Default editor to nvim if unset
if [[ -z "$EDITOR" ]]; then
  export EDITOR='nvim'
fi

alias vim='nvim'
alias vi='nvim'

# }}}

# Widget: bind cd to <tab> {{{

# bind <tab>-without-arguments to cd
# TODO(mark 2021-12-29): very much unused by me. Would be nice to have FZF
# completion here

function _tab_cd {
  if [[ $#BUFFER == 0 ]]; then
    BUFFER='cd '
    CURSOR=3
    zle list-choices
  else
    zle expand-or-complete
  fi
}

zle -N _tab_cd

# }}}

# Widget: Foreground/Background Vim {{{

# Stolen from Reddit, this is the Zsh equivalent of:
#
#   stty susp undef
#   bind '"\C-z":"fg\015"'
#
# Set ctrl + z to fg vim. It makes a great, efficient toggle on slow systems.

function _fg_vim {
  fg nvim 2>/dev/null
}

stty susp undef
zle -N _fg_vim
bindkey '^z' _fg_vim

# }}}

# Git {{{

# cd to Git Project Root Folder
function _git_root {
  if $(git rev-parse 2> /dev/null); then
    builtin cd "$(git rev-parse --show-toplevel)"
  else
    echo "cd: not a git project: ${PWD}"
  fi
}

alias gr='_git_root'

# }}}

# FZF {{{

# TODO(mark 2021-12-29): this whole section needs revision
# See: https://github.com/junegunn/fzf#environment-variables

# TODO(mark 2021-12-29): needs revision
export FZF_DEFAULT_COMMAND='rg --files --follow --hidden -g "!.git/*" -g "!.gitkeep"'
export FZF_CTRL_T_COMMAND='rg --files --null | xargs -0 dirname | sort | uniq'
export FZF_ALT_C_COMMAND='rg --files --null | xargs -0 dirname | sort | uniq'

if [[ $OSTYPE =~ 'linux-gnu' ]]; then
  source '/usr/share/doc/fzf/examples/key-bindings.zsh'
  source '/usr/share/doc/fzf/examples/completion.zsh'
fi

# Browse for a file and open it in vim
alias vo='vim $(fzf --preview "batcat --style=numbers --color=always --line-range :500 {}")'

# }}}

# Command Aliases {{{

alias agu='sudo apt-get update && sudo apt-get -y dist-upgrade'
alias tmux='tmux -2' # TODO(mark 2021-12-29): why this?

# }}}

# NVM {{{

# Lazy load nvm and default node version
# See: https://peterlyons.com/problog/2018/01/zsh-lazy-loading/
# TODO(mark 2021-12-30): check and set path for macOS
# TODO(mark 2021-12-30): can any other tool benefit from lazy load?

function nvm {
  if [[ -d "$HOME/.nvm" ]]; then
    unfunction "$0"
    export NVM_DIR="$HOME/.nvm"
    source "$NVM_DIR/nvm.sh"
    nvm "$@"
  else
    echo "nvm is not installed" >&2
    return 1
  fi
}

# }}}

# Private Zshrc {{{

if [[ -f "$HOME/.private.zsh" ]]; then
  source "$HOME/.private.zsh"
fi

# }}}

# zprof
